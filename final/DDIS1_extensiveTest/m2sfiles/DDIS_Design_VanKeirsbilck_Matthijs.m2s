******************************
**** 16b Brent-Kung adder ****
******************************
.param supply = $globals.supply
.param halfsupply = $globals.supply/2


* Some simulation options
*-------------------------
.options post nomod
.option opts fast parhier=local

.lib '$< strcat(pwd, '/Resources/Technology/tech_wrapper.lib') >$ ' tt
.tran 0.005n 36n
* .vec '$< strcat(pwd, '/m2sfiles/Adder16b.vec')>$'
.vec '$< strcat(pwd, strcat('/m2sfiles/Adder16b',strcat(num2str(globals.pathIndex),'.vec')))>$'


.probe i

.param supply = $globals.supply * 0.933 for power@650ps, 1V for speed

Vdd vdd vss supply
Vdd2 vdd2 vss supply
Vss vss 0 0 


* Sizing Parameters
* ------------------
$nandnorFactor=1;                           %make NAND and NOR  faster
$nMosFactor=1;
$pMosFactor=1;                  %1.6 speed, 1.0 power, 1.0 balance       % size of PMOS vs NMOS  
$seriesFactor=2.6;                %5.3 speed, 1.8 power, 2.5 balance               

$criticalPathBaseFactor=1;      %1.27 speed, 1.3 power, 1.5 balance
$criticalPath1Factor=1.89;         %1.27 speed, 1.3 power, 1.5 balance
$criticalPath2Factor=1;
$bufFactor=1; 

$DotOperatorFactor=1;               % scale the dot operators
$DotOperatorInvertedFactor=1;
$DotOperatorSimpleNormalFactor=1;
$DotOperatorSimpleInvertedFactor=1;
$DotOperatorSimpleIHNLFactor=1;      
$DotOperatorSimpleNHILFactor=1;

$XORFactor=1;
$inverterFactor=1;

$length=45e-9;                  %transistor length

$ if (globals.pathIndex == 15)
$   disp(pMosFactor); disp(seriesFactor);disp(criticalPathBaseFactor);disp(criticalPath1Factor);disp(criticalPath2Factor);
$ end

* Actual circuit
*----------------
$ n = 16;
$ for j = 0:n-1
    xNOTa$j  a$j  aN$j     vdd vss MYNOT
    xNOTaN$j aN$j a_buff$j vdd vss MYNOT
    xNOTb$j  b$j  bN$j     vdd vss MYNOT
    xNOTbN$j bN$j b_buff$j vdd vss MYNOT
$ end


Xadder $xbus('a_buff',0:15) $xbus('b_buff',0:15) $xbus('s',0:16) vdd vss ADDER

   
$ for i = 1:16
    xNOT$i  s$i sN$i vdd2 vss MYNOT multfac = 16
$ end



* Brent-Kung Adder subcircuit
*-----------------------------
.SUBCKT ADDER a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 vdd vss
    xGenProp0 a0 b0 gen0 prop0 vdd vss GenProp      multfac=$criticalPathBaseFactor 
    xGenProp1 a1 b1 gen1 prop1 vdd vss GenProp      multfac=$criticalPathBaseFactor 
    xGenProp2 a2 b2 gen2 prop2 vdd vss GenProp      multfac=$criticalPathBaseFactor 
    xGenProp3 a3 b3 gen3 prop3 vdd vss GenProp      multfac=$criticalPathBaseFactor 
    xGenProp4 a4 b4 gen4 prop4 vdd vss GenProp      multfac=$criticalPathBaseFactor 
    xGenProp5 a5 b5 gen5 prop5 vdd vss GenProp      multfac=$criticalPathBaseFactor 
    xGenProp6 a6 b6 gen6 prop6 vdd vss GenProp      multfac=$criticalPathBaseFactor 
    xGenProp7 a7 b7 gen7 prop7 vdd vss GenProp      multfac=$criticalPathBaseFactor 

    xGenProp8 a8 b8 gen8 prop8 vdd vss GenProp
    xGenProp9 a9 b9 gen9 prop9 vdd vss GenProp
    xGenProp10 a10 b10 gen10 prop10 vdd vss GenProp
    xGenProp11 a11 b11 gen11 prop11 vdd vss GenProp
    xGenProp12 a12 b12 gen12 prop12 vdd vss GenProp
    xGenProp13 a13 b13 gen13 prop13 vdd vss GenProp
    xGenProp14 a14 b14 gen14 prop14 vdd vss GenProp
    xGenProp15 a15 b15 gen15 prop15 vdd vss GenProp

    xDotOperator_a_0 gen0 gen1 prop1 gen1_0 vdd vss DotOperatorSimpleNormalIn                           multfac=$criticalPathBaseFactor 
    xDotOperator_a_1 gen2 prop2 gen3 prop3 gen3_2 prop3_2 vdd vss DotOperatorNormalIn                   multfac=$criticalPathBaseFactor 
    xDotOperator_a_2 gen4 prop4 gen5 prop5 gen5_4 prop5_4 vdd vss DotOperatorNormalIn                   multfac=$criticalPathBaseFactor 
    xDotOperator_a_3 gen6 prop6 gen7 prop7 gen7_6 prop7_6 vdd vss DotOperatorNormalIn                   multfac=$criticalPathBaseFactor 

    xDotOperator_a_4 gen8 prop8 gen9 prop9 gen9_8 prop9_8 vdd vss DotOperatorNormalIn
    xDotOperator_a_5 gen10 prop10 gen11 prop11 gen11_10 prop11_10 vdd vss DotOperatorNormalIn
    xDotOperator_a_6 gen12 prop12 gen13 prop13 gen13_12 prop13_12 vdd vss DotOperatorNormalIn
    xDotOperator_a_7 gen14 prop14 gen15 prop15 gen15_14 prop15_14 vdd vss DotOperatorNormalIn

    xDotOperator_b_0 gen1_0 gen3_2 prop3_2 gen3_0 vdd vss DotOperatorSimpleInvertedIn                   multfac=$criticalPathBaseFactor 
    XBUF3    gen3_0 gen3_0buf vdd vss MYBUF multfac=$bufFactor  * buffer so crit path drives less
    
    xDotOperator_b_1 gen5_4 prop5_4 gen7_6 prop7_6 gen7_4 prop7_4 vdd vss DotOperatorInvertedIn         multfac=$criticalPathBaseFactor 

    xDotOperator_b_2 gen9_8 prop9_8 gen11_10 prop11_10 gen11_8 prop11_8 vdd vss DotOperatorInvertedIn
    xDotOperator_b_3 gen13_12 prop13_12 gen15_14 prop15_14 gen15_12 prop15_12 vdd vss DotOperatorInvertedIn

    xDotOperator_c_0 gen3_0 gen7_4 prop7_4 gen7_0 vdd vss DotOperatorSimpleNormalIn multfac=$criticalPathBaseFactor

    XBUF7  gen7_0 gen7_0buf vdd vss MYBUF multfac=$bufFactor  * buffer so crit path drives less

    xDotOperator_c_1 gen11_8 prop11_8 gen15_12 prop15_12 gen15_8 prop15_8 vdd vss DotOperatorNormalIn

    xDotOperator_d_0 gen7_0 gen15_8 prop15_8 gen15_0 vdd vss DotOperatorSimpleInvertedIn

    xDotOperator_l_1 gen7_0 gen11_8 prop11_8 gen11_0 vdd vss DotOperatorSimpleNormalHighInvertedLow     multfac=$criticalPath1Factor 

    xDotOperator_m_1 gen3_0buf gen5_4 prop5_4 gen5_0 vdd vss DotOperatorSimpleInvertedHighNormalLow
    xDotOperator_m_2 gen7_0 gen9_8 prop9_8 gen9_0 vdd vss DotOperatorSimpleInvertedIn                   multfac=$criticalPath2Factor 
    xDotOperator_m_3 gen11_0 gen13_12 prop13_12 gen13_0 vdd vss DotOperatorSimpleInvertedHighNormalLow  multfac=$criticalPath1Factor 

    xDotOperator_n_1 gen1_0 gen2 prop2 gen2_0 vdd vss DotOperatorSimpleNormalHighInvertedLow
    xDotOperator_n_2 gen3_0buf gen4 prop4 gen4_0 vdd vss DotOperatorSimpleNormalIn
    xDotOperator_n_3 gen5_0 gen6 prop6 gen6_0 vdd vss DotOperatorSimpleNormalHighInvertedLow
    xDotOperator_n_4 gen7_0buf gen8 prop8 gen8_0 vdd vss DotOperatorSimpleNormalHighInvertedLow
    xDotOperator_n_5 gen9_0 gen10 prop10 gen10_0 vdd vss DotOperatorSimpleNormalIn                      multfac=$criticalPath2Factor
    xDotOperator_n_6 gen11_0 gen12 prop12 gen12_0 vdd vss DotOperatorSimpleNormalIn                     multfac=$criticalPath2Factor 
    xDotOperator_n_7 gen13_0 gen14 prop14 gen14_0 vdd vss DotOperatorSimpleNormalHighInvertedLow        multfac=$criticalPath1Factor 

    xXOR_0 prop0 vss    s0 vdd vss MYXOR        multfac=$XORFactor 
    xXOR_1 prop1 gen0   s1 vdd vss MYXOR        multfac=$XORFactor 
    xXOR_2 prop2 gen1_0 s2 vdd vss MYNOTXOR     multfac=$XORFactor 
    xXOR_3 prop3 gen2_0 s3 vdd vss MYXOR        multfac=$XORFactor  
    xXOR_4 prop4 gen3_0buf s4 vdd vss MYXOR     multfac=$XORFactor 
    xXOR_5 prop5 gen4_0 s5 vdd vss MYNOTXOR     multfac=$XORFactor 
    xXOR_6 prop6 gen5_0 s6 vdd vss MYNOTXOR     multfac=$XORFactor 
    xXOR_7 prop7 gen6_0 s7 vdd vss MYXOR        multfac=$XORFactor 
    xXOR_8 prop8 gen7_0buf s8 vdd vss MYNOTXOR     multfac=$XORFactor
    xXOR_9 prop9 gen8_0 s9 vdd vss MYXOR        multfac=$XORFactor*1.5
    xXOR_10 prop10 gen9_0 s10 vdd vss MYXOR     multfac=$XORFactor
    xXOR_11 prop11 gen10_0 s11 vdd vss MYNOTXOR multfac=$XORFactor
    xXOR_12 prop12 gen11_0 s12 vdd vss MYXOR    multfac=$XORFactor
    xXOR_13 prop13 gen12_0 s13 vdd vss MYNOTXOR multfac=$XORFactor*1.2
    xXOR_14 prop14 gen13_0 s14 vdd vss MYNOTXOR multfac=$XORFactor*1.2
    xXOR_15 prop15 gen14_0 s15 vdd vss MYXOR    multfac=$XORFactor*2
    xXOR_16 vss   gen15_0 s16 vdd vss MYXOR     multfac=$XORFactor
    
.ENDS ADDER


* Other subcircuits
*-------------------
.SUBCKT MYNAND inputA inputB output vdd vss multfac='1'
    xM1 output inputA int   vss MOSN w='multfac*120e-9 * $nMosFactor *$seriesFactor *$nandnorFactor ' l=$length 
    xM2 int    inputB vss   vss MOSN w='multfac*120e-9 * $nMosFactor *$seriesFactor *$nandnorFactor ' l=$length 
    xM3 output inputA vdd   vdd MOSP w='multfac*120e-9 * $pMosFactor *$nandnorFactor '   l=$length 
    xM4 output inputB vdd   vdd MOSP w='multfac*120e-9 * $pMosFactor *$nandnorFactor '   l=$length 
.ENDS MYNAND

.SUBCKT MYNOR input1 input2 output vdd vss multfac='1'
*    drain  gate   src  bulk
    xMn1 output input1 vss  vss MOSN w='multfac*120e-9 * $nMosFactor *$nandnorFactor  '                            l=$length 
    xMn2 output input2 vss  vss MOSN w='multfac*120e-9 * $nMosFactor *$nandnorFactor  '                            l=$length 
    xMp1 sp1    input1 vdd  vdd MOSP w='multfac*120e-9 * $pMosFactor *$seriesFactor *$nandnorFactor ' l=$length  * double b/c pMos, anoter b/c for NOR gate nMOS in parallel, and we want equal delays
    xMp2 output input2 sp1  vdd MOSP w='multfac*120e-9 * $pMosFactor *$seriesFactor *$nandnorFactor ' l=$length  * factor 1.5 b/c series has extra node, so extra cap
.ENDS MYNOR

.SUBCKT MYNOT input output vdd vss multfac='1'
    xM1 output input vss    vss MOSN w='multfac*120e-9 * $nMosFactor *$inverterFactor '                       l=$length 
    xM2 output input vdd    vdd MOSP w='multfac*$pMosFactor *120e-9 *$inverterFactor '          l=$length 
.ENDS MYNOT

.SUBCKT MYXOR inputA inputB  output vdd vss multfac='1'
      *    drain  gate   src  bulk
       xMNA output1  inputA  vss        vss MOSN w='multfac*120e-9* $nMosFactor *$XORFactor '                 l=$length 
       xMPA output1  inputA  vdd        vdd MOSP w='multfac*$pMosFactor *120e-9*$XORFactor '    l=$length 

       xMNB output  inputB  output1     vss MOSN w='multfac*120e-9* $nMosFactor *$XORFactor '                 l=$length 
       xMPB output  inputB  inputA      vdd MOSP w='multfac*$pMosFactor *120e-9*$XORFactor '    l=$length 

       xMNtrans inputB  output1  output vss MOSN w='multfac*120e-9* $nMosFactor *$XORFactor '                 l=$length 
       xMPtrans output  inputA  inputB  vdd MOSP w='multfac*$pMosFactor *120e-9*$XORFactor '    l=$length 
 .ENDS MYXOR

 .SUBCKT MYXNOR inputA inputB output vdd vss multfac='1' 
    xXOR_0 inputA inputB outputInv      vdd vss MYXOR multfac=multfac
    xNOT_1 outputInv output             vdd vss MYNOT multfac=multfac
.ENDS SUBCKT MYXNOR

 .SUBCKT MYNOTXOR inputA inputB output vdd vss multfac='1'
    xNOT_1 inputB inputBInv             vdd vss MYNOT multfac=multfac*2
    xXOR_0 inputA inputBInv output      vdd vss MYXOR multfac=multfac
.ENDS SUBCKT MYXNOR
    
.SUBCKT MYAOI A B C Out vdd vss multfac='1'
    xM3 Out     A  np1      vdd MOSP w='multfac * $seriesFactor *$pMosFactor *120e-9' l=$length 
    xM1 np1     B  vdd      vdd MOSP w='multfac * $pMosFactor * 120e-9' l=$length 
    xM2 np1     C  vdd      vdd MOSP w='multfac * $pMosFactor * 120e-9' l=$length 
    
    xM5 Out     A  vss      vss MOSN w='multfac * 120e-9 * $nMosFactor '                             l=$length 
    xM7 nn1     B  vss      vss MOSN w='multfac * 120e-9 * $seriesFactor * $nMosFactor '              l=$length 
    xM6 Out     C  nn1      vss MOSN w='multfac * 120e-9 * $seriesFactor * $nMosFactor '              l=$length 
.ENDS MYAOI

.SUBCKT MYOAI A B C Out vdd vss multfac='1'
    xM1 np1     B  vdd      vdd MOSP w='multfac * 120e-9 * $pMosFactor *$seriesFactor ' l=$length 
    xM2 Out     C  np1      vdd MOSP w='multfac * 120e-9 * $pMosFactor *$seriesFactor ' l=$length 
    xM3 Out     A  vdd      vdd MOSP w='multfac * 120e-9 * $pMosFactor '                 l=$length 
    
    xM5 Out     A  nn1      vss MOSN w='multfac * 120e-9 * $nMosFactor *$seriesFactor '                l=$length 
    xM6 nn1     C  vss      vss MOSN w='multfac * 120e-9 * $nMosFactor '                l=$length 
    xM7 nn1     B  vss      vss MOSN w='multfac * 120e-9 * $nMosFactor '                l=$length 
.ENDS MYOAI

.SUBCKT GenProp A B Gen Prop vdd vss multfac='1'
    xNAND A B NGen           vdd vss MYNAND multfac=multfac
    xNOT NGen Gen           vdd vss MYNOT  multfac=multfac*2
    xXOR A B Prop           vdd vss MYXOR  multfac=multfac
.ENDS Genprop

.SUBCKT DotOperatorNormalIn Gen1 Prop1 Gen2 Prop2 NGenOut NPropOut vdd vss multfac='1'
    xAOI Gen2 Prop2 Gen1 NGenOut        vdd vss MYAOI multfac='multfac  * $DotOperatorFactor '
    xNAND Prop1 Prop2 NPropOut          vdd vss MYNAND multfac='multfac * $DotOperatorFactor '
.ENDS DotOperator

.SUBCKT DotOperatorInvertedIn Gen1 Prop1 Gen2 Prop2 GenOut PropOut vdd vss multfac='1'
    xOAI Gen2 Prop2 Gen1 GenOut         vdd vss MYOAI multfac='multfac * $DotOperatorInvertedFactor '
    xNOR Prop1 Prop2 PropOut            vdd vss MYNOR multfac='multfac * $DotOperatorInvertedFactor '
.ENDS DotOperatorInverted

.SUBCKT DotOperatorSimpleNormalIn Gen1 Gen2 Prop2 GenOut vdd vss multfac='1'
    xAOI Gen2 Prop2 Gen1 GenOut      vdd vss MYAOI multfac='multfac * $DotOperatorSimpleNormalFactor '
.ENDS DotOperatorSimple

.SUBCKT DotOperatorSimpleInvertedIn Gen1 Gen2 Prop2 GenOut vdd vss multfac='1'
    xOAI Gen2 Prop2 Gen1 GenOut         vdd vss MYOAI multfac='multfac * $DotOperatorSimpleInvertedFactor '
.ENDS DotOperatorSimpleInverted

.SUBCKT DotOperatorSimpleNormalHighInvertedLow Gen1 Gen2 Prop2 GenOut vdd vss multfac='1'
    xNOT1 Gen2 Gen2Inv                  vdd vss MYNOT multfac='multfac * $DotOperatorSimpleNHILFactor ' 
    xNOT2 Prop2 Prop2Inv                vdd vss MYNOT multfac='multfac * $DotOperatorSimpleNHILFactor '
    xOAI Gen2Inv Prop2Inv Gen1 GenOut   vdd vss MYOAI multfac='multfac * $DotOperatorSimpleNHILFactor ' 
.ENDS DotOperatorSimpleInverted

.SUBCKT DotOperatorSimpleInvertedHighNormalLow Gen1 Gen2 Prop2 GenOut vdd vss multfac='1'
    xNOT1 Gen2 Gen2Inv                  vdd vss MYNOT multfac='multfac * $DotOperatorSimpleIHNLFactor '
    xNOT2 Prop2 Prop2Inv                vdd vss MYNOT multfac='multfac * $DotOperatorSimpleIHNLFactor '
    xAOI Gen2Inv Prop2Inv Gen1 GenOut   vdd vss MYAOI multfac='multfac * $DotOperatorSimpleIHNLFactor ' 
.ENDS DotOperatorSimpleInverted

.SUBCKT MYBUF input output vdd vss multfac='1'
Xnot1         input out1   vdd vss MYNOT multfac=multfac 
Xnot2         out1  output vdd vss MYNOT multfac=multfac 
.ENDS MYBUF

.END

